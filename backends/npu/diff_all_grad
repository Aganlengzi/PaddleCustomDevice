diff --git a/backends/npu/kernels/abs_kernel.cc b/backends/npu/kernels/abs_kernel.cc
index bfd8a45..3ac81c8 100644
--- a/backends/npu/kernels/abs_kernel.cc
+++ b/backends/npu/kernels/abs_kernel.cc
@@ -45,5 +45,7 @@ void AbsGradKernel(const Context& dev_ctx,
 PD_REGISTER_PLUGIN_KERNEL(
     abs, npu, ALL_LAYOUT, custom_kernel::AbsKernel, float, double) {}
 
+/*
 PD_REGISTER_PLUGIN_KERNEL(
     abs_grad, npu, ALL_LAYOUT, custom_kernel::AbsGradKernel, float, double) {}
+*/
diff --git a/backends/npu/kernels/activation_kernel.cc b/backends/npu/kernels/activation_kernel.cc
index 3bb85aa..d95190b 100644
--- a/backends/npu/kernels/activation_kernel.cc
+++ b/backends/npu/kernels/activation_kernel.cc
@@ -820,6 +820,7 @@ PD_REGISTER_PLUGIN_KERNEL(leaky_relu,
                           phi::dtype::float16,
                           double) {}
 
+/*
 PD_REGISTER_PLUGIN_KERNEL(leaky_relu_grad,
                           npu,
                           ALL_LAYOUT,
@@ -827,6 +828,7 @@ PD_REGISTER_PLUGIN_KERNEL(leaky_relu_grad,
                           float,
                           phi::dtype::float16,
                           double) {}
+*/
 
 PD_REGISTER_PLUGIN_KERNEL(pow,
                           npu,
@@ -892,6 +894,7 @@ PD_REGISTER_PLUGIN_KERNEL(sigmoid,
                           phi::dtype::float16,
                           double) {}
 
+/*
 PD_REGISTER_PLUGIN_KERNEL(sigmoid_grad,
                           npu,
                           ALL_LAYOUT,
@@ -899,6 +902,7 @@ PD_REGISTER_PLUGIN_KERNEL(sigmoid_grad,
                           float,
                           phi::dtype::float16,
                           double) {}
+*/
 
 PD_REGISTER_PLUGIN_KERNEL(sqrt,
                           npu,
diff --git a/backends/npu/kernels/batch_norm_kernel.cc b/backends/npu/kernels/batch_norm_kernel.cc
index 4670571..aa3d05d 100644
--- a/backends/npu/kernels/batch_norm_kernel.cc
+++ b/backends/npu/kernels/batch_norm_kernel.cc
@@ -296,6 +296,7 @@ PD_REGISTER_PLUGIN_KERNEL(batch_norm,
                           float,
                           double) {}
 
+/*
 PD_REGISTER_PLUGIN_KERNEL(batch_norm_grad,
                           npu,
                           ALL_LAYOUT,
@@ -303,6 +304,7 @@ PD_REGISTER_PLUGIN_KERNEL(batch_norm_grad,
                           phi::dtype::float16,
                           float,
                           double) {}
+*/
 
 PD_REGISTER_PLUGIN_KERNEL(batch_norm_infer,
                           npu,
diff --git a/backends/npu/kernels/bce_loss_kernel.cc b/backends/npu/kernels/bce_loss_kernel.cc
index ac33cd1..ec3c76a 100644
--- a/backends/npu/kernels/bce_loss_kernel.cc
+++ b/backends/npu/kernels/bce_loss_kernel.cc
@@ -55,9 +55,11 @@ void BCELossGradKernel(const Context& dev_ctx,
 PD_REGISTER_PLUGIN_KERNEL(
     bce_loss, npu, ALL_LAYOUT, custom_kernel::BCELossKernel, float, double) {}
 
+/*
 PD_REGISTER_PLUGIN_KERNEL(bce_loss_grad,
                           npu,
                           ALL_LAYOUT,
                           custom_kernel::BCELossGradKernel,
                           float,
                           double) {}
+*/
diff --git a/backends/npu/kernels/concat_kernel.cc b/backends/npu/kernels/concat_kernel.cc
index 40f3f85..4c64db8 100644
--- a/backends/npu/kernels/concat_kernel.cc
+++ b/backends/npu/kernels/concat_kernel.cc
@@ -162,6 +162,7 @@ PD_REGISTER_PLUGIN_KERNEL(concat,
                           double,
                           phi::dtype::float16) {}
 
+/*
 PD_REGISTER_PLUGIN_KERNEL(concat_grad,
                           npu,
                           ALL_LAYOUT,
@@ -171,3 +172,4 @@ PD_REGISTER_PLUGIN_KERNEL(concat_grad,
                           float,
                           double,
                           phi::dtype::float16) {}
+*/
diff --git a/backends/npu/kernels/elementwise_add_kernel.cc b/backends/npu/kernels/elementwise_add_kernel.cc
index cba4006..ef6e971 100644
--- a/backends/npu/kernels/elementwise_add_kernel.cc
+++ b/backends/npu/kernels/elementwise_add_kernel.cc
@@ -152,9 +152,11 @@ PD_REGISTER_PLUGIN_KERNEL(add,
                           float,
                           phi::dtype::float16) {}
 
+/*
 PD_REGISTER_PLUGIN_KERNEL(add_grad,
                           npu,
                           ALL_LAYOUT,
                           custom_kernel::AddGradKernel,
                           float,
                           phi::dtype::float16) {}
+*/
diff --git a/backends/npu/kernels/elementwise_mul_kernel.cc b/backends/npu/kernels/elementwise_mul_kernel.cc
index 03ea16d..64561d6 100644
--- a/backends/npu/kernels/elementwise_mul_kernel.cc
+++ b/backends/npu/kernels/elementwise_mul_kernel.cc
@@ -160,6 +160,7 @@ PD_REGISTER_PLUGIN_KERNEL(multiply,
                           phi::dtype::float16,
                           double) {}
 
+/*
 PD_REGISTER_PLUGIN_KERNEL(multiply_grad,
                           npu,
                           ALL_LAYOUT,
@@ -169,3 +170,4 @@ PD_REGISTER_PLUGIN_KERNEL(multiply_grad,
                           float,
                           phi::dtype::float16,
                           double) {}
+*/
diff --git a/backends/npu/kernels/elementwise_sub_kernel.cc b/backends/npu/kernels/elementwise_sub_kernel.cc
index b7e5cf5..dcaf72e 100644
--- a/backends/npu/kernels/elementwise_sub_kernel.cc
+++ b/backends/npu/kernels/elementwise_sub_kernel.cc
@@ -185,6 +185,7 @@ PD_REGISTER_PLUGIN_KERNEL(subtract,
                           int64_t,
                           double) {}
 
+/*
 PD_REGISTER_PLUGIN_KERNEL(subtract_grad,
                           npu,
                           ALL_LAYOUT,
@@ -192,3 +193,4 @@ PD_REGISTER_PLUGIN_KERNEL(subtract_grad,
                           float,
                           int64_t,
                           double) {}
+*/
diff --git a/backends/npu/kernels/interpolate_kernel.cc b/backends/npu/kernels/interpolate_kernel.cc
index 0a0d735..7c9b007 100755
--- a/backends/npu/kernels/interpolate_kernel.cc
+++ b/backends/npu/kernels/interpolate_kernel.cc
@@ -949,12 +949,14 @@ PD_REGISTER_PLUGIN_KERNEL(nearest_interp,
                           float,
                           phi::dtype::float16) {}
 
+/*
 PD_REGISTER_PLUGIN_KERNEL(nearest_interp_grad,
                           npu,
                           ALL_LAYOUT,
                           custom_kernel::NearestInterpGradKernel,
                           float,
                           phi::dtype::float16) {}
+*/
 
 PD_REGISTER_PLUGIN_KERNEL(bilinear_interp,
                           npu,
diff --git a/backends/npu/kernels/reduce_mean_kernel.cc b/backends/npu/kernels/reduce_mean_kernel.cc
index 82332e8..da2b498 100755
--- a/backends/npu/kernels/reduce_mean_kernel.cc
+++ b/backends/npu/kernels/reduce_mean_kernel.cc
@@ -127,5 +127,7 @@ PD_REGISTER_PLUGIN_KERNEL(
 PD_REGISTER_PLUGIN_KERNEL(
     mean, npu, ALL_LAYOUT, custom_kernel::MeanKernel, float) {}
 
+/*
 PD_REGISTER_PLUGIN_KERNEL(
     mean_grad, npu, ALL_LAYOUT, custom_kernel::MeanGradKernel, float) {}
+*/
diff --git a/backends/npu/kernels/reduce_sum_kernel.cc b/backends/npu/kernels/reduce_sum_kernel.cc
index e88e0e9..9cd4b5d 100755
--- a/backends/npu/kernels/reduce_sum_kernel.cc
+++ b/backends/npu/kernels/reduce_sum_kernel.cc
@@ -228,6 +228,7 @@ PD_REGISTER_PLUGIN_KERNEL(sum,
   kernel->OutputAt(0).SetDataType(paddle::experimental::DataType::UNDEFINED);
 }
 
+/*
 PD_REGISTER_PLUGIN_KERNEL(sum_grad,
                           npu,
                           ALL_LAYOUT,
@@ -236,3 +237,4 @@ PD_REGISTER_PLUGIN_KERNEL(sum_grad,
                           int64_t,
                           phi::dtype::float16,
                           float) {}
+*/
diff --git a/backends/npu/kernels/reshape2_kernel.cc b/backends/npu/kernels/reshape2_kernel.cc
index d464497..d6e963c 100644
--- a/backends/npu/kernels/reshape2_kernel.cc
+++ b/backends/npu/kernels/reshape2_kernel.cc
@@ -202,6 +202,7 @@ PD_REGISTER_PLUGIN_KERNEL(reshape_with_xshape,
                           int32_t,
                           int64_t,
                           bool) {}
+/*
 PD_REGISTER_PLUGIN_KERNEL(reshape_grad,
                           npu,
                           ALL_LAYOUT,
@@ -214,3 +215,4 @@ PD_REGISTER_PLUGIN_KERNEL(reshape_grad,
                           int32_t,
                           int64_t,
                           bool) {}
+*/
diff --git a/backends/npu/kernels/sigmoid_cross_entropy_with_logits_kernel.cc b/backends/npu/kernels/sigmoid_cross_entropy_with_logits_kernel.cc
index df424af..48e8be6 100644
--- a/backends/npu/kernels/sigmoid_cross_entropy_with_logits_kernel.cc
+++ b/backends/npu/kernels/sigmoid_cross_entropy_with_logits_kernel.cc
@@ -79,6 +79,7 @@ PD_REGISTER_PLUGIN_KERNEL(sigmoid_cross_entropy_with_logits,
                           float,
                           double) {}
 
+/*
 PD_REGISTER_PLUGIN_KERNEL(
     sigmoid_cross_entropy_with_logits_grad,
     npu,
@@ -86,3 +87,4 @@ PD_REGISTER_PLUGIN_KERNEL(
     custom_kernel::SigmoidCrossEntropyWithLogitsGradKernel,
     float,
     double) {}
+*/
diff --git a/backends/npu/kernels/slice_kernel.cc b/backends/npu/kernels/slice_kernel.cc
index 2af63a6..dd85dd3 100644
--- a/backends/npu/kernels/slice_kernel.cc
+++ b/backends/npu/kernels/slice_kernel.cc
@@ -318,6 +318,7 @@ void SliceGradRawKernel(const Context& dev_ctx,
 }
 }  // namespace custom_kernel
 
+/*
 PD_REGISTER_PLUGIN_KERNEL(slice,
                           npu,
                           ALL_LAYOUT,
@@ -329,6 +330,8 @@ PD_REGISTER_PLUGIN_KERNEL(slice,
                           int32_t,
                           int64_t,
                           bool) {}
+*/
+/*
 PD_REGISTER_PLUGIN_KERNEL(slice_grad,
                           npu,
                           ALL_LAYOUT,
@@ -340,3 +343,4 @@ PD_REGISTER_PLUGIN_KERNEL(slice_grad,
                           int32_t,
                           int64_t,
                           bool) {}
+*/
diff --git a/backends/npu/kernels/transpose_kernel.cc b/backends/npu/kernels/transpose_kernel.cc
index ea4ca8b..2163892 100644
--- a/backends/npu/kernels/transpose_kernel.cc
+++ b/backends/npu/kernels/transpose_kernel.cc
@@ -66,6 +66,7 @@ PD_REGISTER_PLUGIN_KERNEL(transpose,
                           float,
                           double) {}
 
+/*
 PD_REGISTER_PLUGIN_KERNEL(transpose_grad,
                           npu,
                           ALL_LAYOUT,
@@ -76,3 +77,4 @@ PD_REGISTER_PLUGIN_KERNEL(transpose_grad,
                           int8_t,
                           float,
                           double) {}
+*/
